# Workflow name as it will appear in the Actions tab of the GitHub repository
name: r-base image

# Controls when the action will run.
on:
  # Triggers the workflow on push events
  push:
    branches:
      # React to push events on main branch
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build the shiny application into a docker image
  build-latest:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # An action that checks out your repository and downloads it to the runner
      - uses: actions/checkout@v2

      # Login to DockerHub
      - name: Login into docker registry
        run: echo ${{ secrets.REGISTRY_TOKEN }} | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USER }} --password-stdin

      # build the docker image and give it the name main
      - name: Build and push the docker image
        id: docker_build # step id
        uses: docker/build-push-action@v2 # https://github.com/docker/build-push-action
        with:
          push: true # push to docker registry
          tags: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USER }}/r-base
          context: .
          file: ./ubuntu.Dockerfile

      - name: Logout of docker registry
        run: docker logout

  build-ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # An action that checks out your repository and downloads it to the runner
      - uses: actions/checkout@v2

      # Login to DockerHub
      - name: Login into docker registry
        run: echo ${{ secrets.REGISTRY_TOKEN }} | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USER }} --password-stdin

      # build the docker image and give it the name main
      - name: Build and push the docker image
        id: docker_build # step id
        uses: docker/build-push-action@v2 # https://github.com/docker/build-push-action
        with:
          push: true # push to docker registry
          tags: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USER }}/r-base:ubuntu:ubuntu
          context: .
          file: ./ubuntu.Dockerfile

      - name: Logout of docker registry
        run: docker logout

  build-debian:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # An action that checks out your repository and downloads it to the runner
      - uses: actions/checkout@v2

      # Login to DockerHub
      - name: Login into docker registry
        run: echo ${{ secrets.REGISTRY_TOKEN }} | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USER }} --password-stdin

      # build the docker image and give it the name main
      - name: Build and push the docker image
        id: docker_build # step id
        uses: docker/build-push-action@v2 # https://github.com/docker/build-push-action
        with:
          push: true # push to docker registry
          tags: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USER }}/r-base:ubuntu:debian
          context: .
          file: ./ubuntu.Dockerfile

      - name: Logout of docker registry
        run: docker logout
